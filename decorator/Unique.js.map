{"version":3,"sources":["../../src/decorator/Unique.ts"],"names":[],"mappings":";;AAAA,kCAAkD;AAuBlD;;GAEG;AACH,SAAgB,MAAM,CAAC,YAAyF,EAC5G,WAAgF;IAChF,IAAM,IAAI,GAAG,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC;IACzE,IAAM,MAAM,GAAG,OAAO,YAAY,KAAK,QAAQ,CAAC,CAAC,CAAqE,WAAW,CAAC,CAAC,CAAC,YAAwB,CAAC;IAE7J,OAAO,UAAU,WAA8B,EAAE,YAA8B;QAE3E,IAAI,OAAO,GAAG,MAAM,CAAC;QAErB,IAAI,YAAY,KAAK,SAAS,EAAE;YAC5B,QAAQ,OAAO,CAAC,YAAY,CAAC,EAAE;gBAC3B,KAAK,QAAQ;oBACT,OAAO,GAAG,CAAC,YAAY,CAAC,CAAC;oBACzB,MAAM;gBAEV,KAAK,QAAQ;oBACT,OAAO,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC;oBACpC,MAAM;aACb;SACJ;QAED,IAAM,IAAI,GAAuB;YAC7B,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,WAAuB;YACxE,IAAI,EAAE,IAAI;YACV,OAAO,SAAA;SACV,CAAC;QACF,8BAAsB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC;AACN,CAAC;AA5BD,wBA4BC","file":"Unique.js","sourcesContent":["import { getMetadataArgsStorage } from \"../index\";\r\nimport { UniqueMetadataArgs } from \"../metadata-args/UniqueMetadataArgs\";\r\n\r\n/**\r\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\r\n */\r\nexport function Unique(name: string, fields: string[]): ClassDecorator & PropertyDecorator;\r\n\r\n/**\r\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\r\n */\r\nexport function Unique(fields: string[]): ClassDecorator & PropertyDecorator;\r\n\r\n/**\r\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\r\n */\r\nexport function Unique(fields: (object?: any) => (any[] | { [key: string]: number })): ClassDecorator & PropertyDecorator;\r\n\r\n/**\r\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\r\n */\r\nexport function Unique(name: string, fields: (object?: any) => (any[] | { [key: string]: number })): ClassDecorator & PropertyDecorator;\r\n\r\n/**\r\n * Composite unique constraint must be set on entity classes and must specify entity's fields to be unique.\r\n */\r\nexport function Unique(nameOrFields?: string | string[] | ((object: any) => (any[] | { [key: string]: number })),\r\n    maybeFields?: ((object?: any) => (any[] | { [key: string]: number })) | string[]): ClassDecorator & PropertyDecorator {\r\n    const name = typeof nameOrFields === \"string\" ? nameOrFields : undefined;\r\n    const fields = typeof nameOrFields === \"string\" ? <((object?: any) => (any[] | { [key: string]: number })) | string[]>maybeFields : nameOrFields as string[];\r\n\r\n    return function (clsOrObject: Function | Object, propertyName?: string | symbol) {\r\n\r\n        let columns = fields;\r\n\r\n        if (propertyName !== undefined) {\r\n            switch (typeof (propertyName)) {\r\n                case \"string\":\r\n                    columns = [propertyName];\r\n                    break;\r\n\r\n                case \"symbol\":\r\n                    columns = [propertyName.toString()];\r\n                    break;\r\n            }\r\n        }\r\n\r\n        const args: UniqueMetadataArgs = {\r\n            target: propertyName ? clsOrObject.constructor : clsOrObject as Function,\r\n            name: name,\r\n            columns,\r\n        };\r\n        getMetadataArgsStorage().uniques.push(args);\r\n    };\r\n}\r\n"],"sourceRoot":".."}