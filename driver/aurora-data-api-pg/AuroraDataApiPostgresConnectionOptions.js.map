{"version":3,"sources":["../../src/driver/aurora-data-api-pg/AuroraDataApiPostgresConnectionOptions.ts"],"names":[],"mappings":"","file":"AuroraDataApiPostgresConnectionOptions.js","sourcesContent":["import {BaseConnectionOptions} from \"../../connection/BaseConnectionOptions\";\r\n\r\n/**\r\n * Postgres-specific connection options.\r\n */\r\nexport interface AuroraDataApiPostgresConnectionOptions extends BaseConnectionOptions {\r\n\r\n    /**\r\n     * Database type.\r\n     */\r\n    readonly type: \"aurora-data-api-pg\";\r\n\r\n    readonly region: string;\r\n\r\n    readonly secretArn: string;\r\n\r\n    readonly resourceArn: string;\r\n\r\n    readonly database: string;\r\n\r\n    /**\r\n     * The Postgres extension to use to generate UUID columns. Defaults to uuid-ossp.\r\n     * If pgcrypto is selected, TypeORM will use the gen_random_uuid() function from this extension.\r\n     * If uuid-ossp is selected, TypeORM will use the uuid_generate_v4() function from this extension.\r\n     */\r\n    readonly uuidExtension?: \"pgcrypto\" | \"uuid-ossp\";\r\n\r\n\r\n    /*\r\n    * Function handling errors thrown by drivers pool.\r\n    * Defaults to logging error with `warn` level.\r\n     */\r\n    readonly poolErrorHandler?: (err: any) => any;\r\n\r\n    readonly serviceConfigOptions?: { [key: string]: any };\r\n\r\n    readonly formatOptions?: { [key: string]: any };\r\n}\r\n"],"sourceRoot":"../.."}